input {
    udp {
    port => 10001
    }
}

filter {
    mutate {
                add_field => ["_raw", "%{message}"]
           }
    grok {
             match => [
             "message","<%{POSINT}>%{SYSLOGTIMESTAMP} \(%{DATA:LogType}\): %{NUMBER:unixTimestamp}   %{NUMBER:bytes} %{DATA:src_ip} %{DATA:tcp_response}/%{DATA:http_status} %{NUMBER} %{DATA:method} %{DATA:url} - %{DATA:hier_method}/%{DATA:dest_ip} %{GREEDYDATA:fileType}",
             "message","<%{POSINT}>%{SYSLOGTIMESTAMP} \(%{DATA:LogType}\): %{NUMBER:unixTimestamp}  %{NUMBER:bytes} %{DATA:src_ip} %{DATA:tcp_response}/%{DATA:http_status} %{NUMBER} %{DATA:method} %{DATA:url} - %{DATA:hier_method}/%{DATA:dest_ip} %{GREEDYDATA:fileType}",
             "message","<%{POSINT}>%{SYSLOGTIMESTAMP} \(%{DATA:LogType}\): %{NUMBER:unixTimestamp} %{NUMBER:bytes} %{DATA:src_ip} %{DATA:tcp_response}/%{DATA:http_status} %{NUMBER} %{DATA:method} %{DATA:url} - %{DATA:hier_method}/%{DATA:dest_ip} %{GREEDYDATA:fileType}" ,
             "message","<%{POSINT}>%{SYSLOGTIMESTAMP} \(%{DATA:LogType}\): %{NUMBER:unixTimestamp}     %{NUMBER:bytes} %{DATA:src_ip} %{DATA:tcp_response}/%{DATA:http_status} %{NUMBER} %{DATA:method} %{DATA:url} - %{DATA:hier_method}/%{DATA:dest_ip} %{GREEDYDATA:fileType}",
             "message","<%{POSINT}>%{SYSLOGTIMESTAMP} \(%{DATA:LogType}\): %{NUMBER:unixTimestamp}      %{NUMBER:bytes} %{DATA:src_ip} %{DATA:tcp_response}/%{DATA:http_status} %{NUMBER} %{DATA:method} %{DATA:url} - %{DATA:hier_method}/%{DATA:dest_ip} %{GREEDYDATA:fileType}",
             "message","<%{POSINT}>%{SYSLOGTIMESTAMP} \(%{DATA:LogType}\): %{NUMBER:unixTimestamp}       %{NUMBER:bytes} %{DATA:src_ip} %{DATA:tcp_response}/%{DATA:http_status} %{NUMBER} %{DATA:method} %{DATA:url} - %{DATA:hier_method}/%{DATA:dest_ip} %{GREEDYDATA:fileType}" ]
        }

        kv {
               source => "message"
               field_split => " "
               value_split => "="
               include_keys => [ "art","deviceProcessName","dvchost","dvc"]
            }
        
        mutate {
           convert => [ "bytes", "integer" ]
           convert => [ "art", "float" ]
        }
        mutate {
            add_field => { "deviceProduct" => "Squid" }
            add_field => { "deviceVendor" => "Proxy Server" }
        }
        geoip {
                 source => "dest_ip"
        }
	if "_grokparsefailure" in [tags] { drop {} } 

	mutate {
            remove_field => ["message"]}
}

output {
  #stdout {codec => rubydebug}
  elasticsearch {
     hosts => ["192.168.100.6:10001"]
     index => "fortigate-%{+YYYY.MM}"
    }
}
