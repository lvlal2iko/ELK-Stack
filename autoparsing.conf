input {
	    --{protocol}-- {
	    	port => --{port}--
	    }

}
filter{
	mutate{
		add_field => ["ilogtype", "--{type}--"]
	}
    	if [ilogtype] == "fortigate"{
    		mutate {
                gsub => [
                    "message","[\\]{1}",""
                ]
            }
           grok {
                 match => [ "message", "%{SYSLOG5424PRI}%{GREEDYDATA:_raw}" ]
            }

           kv {
               source => "_raw"
               value_split => "="
               trim_value => "_"
            }

           mutate {
                add_field => ["_time", "%{date} %{time}"]
            }

            mutate {
                rename => {"srcip"=>"src_ip"}
                rename => {"dstip"=>"dest_ip"}
                rename => {"dstname" => "dest_hostname"}
                rename => {"rcvdbyte" => "bytes_in"}
                rename => {"sentbyte" => "bytes_out"}
                rename => {"dstcountry" => "dest_country"}
                rename => {"devid" => "dev_id"}
                rename => {"devname" => "dev_name"}
                rename => {"devtype" => "dev_type"}
                rename => {"dstintf" => "dest_interface"}
                rename => {"dstport" => "dest_port"}
                rename => {"srccountry" => "src_country"}
                rename => {"srcintf" => "src_interface"}
                rename => {"srcmac" => "src_mac"}
                rename => {"srcname" => "src_hostname"}
                rename => {"srcport" => "src_port"}
                rename => {"srcserver" => "src_server"}
                rename => {"proto" => "protocol"}
                rename => {"srcintfrole" => "src_interface_role"}
                rename => {"rcvdpkt" => "in_pkt"}
                rename => {"sentpkt" => "out_pkt"}
                rename => {"osname" => "os_name"}
                rename => {"policyid" => "policy_id"}
            }

            mutate {
                remove_field => [ "message" ]

            }
                mutate {
                    convert => [ "bytes_in", "integer" ]
                convert => [ "bytes_out", "integer"]
                }
                date {
                locale => "en"
                match => ["_time", "YYYY-MM-dd HH:mm:ss"]
                timezone => "Asia/Bangkok"
                target => "@timestamp"
            }
            geoip {	source => "dest_ip"} 
        }
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	if [ilogtype] == "sophos"{
			mutate {
               add_field => { "_raw" => "%{message}"}
          	}
        	mutate {
                 gsub => [ "_raw", "= ","=N/A " ]
          	}
        	kv {
            	source => "_raw"
            	field_split => " "
            	value_split => "="
        	}
        	mutate {
            	rename => ["recv_bytes", "bytes_in" ]
            	rename => ["sent_bytes", "bytes_out" ]
            	rename => ["dst_ip", "dest_ip" ]
            	rename => ["dst_port", "dest_port" ]
            	rename => ["application", "app" ]
            	rename => ["application_category", "app_cat" ]
            	rename => ["application_risk", "app_risk" ]
            	rename => ["status", "action" ]
            	add_field => { "device_product" => "XG Firewall" }
            	add_field => { "device_vendor" => "Sophos" }
            	add_field => { "temp_time" => "%{date} %{time}" }

        	}
        	mutate {
                convert => [ "bytes_in", "integer" ]
                convert => [ "bytes_out", "integer" ]
        	}
         	mutate {
            	remove_field => [ "message" ]
        	}
        	date {
               match => [ "temp_time", "yyyy-MM-dd HH:mm:ss" ]
               timezone => "Asia/Bangkok"
               target => "@timestamp"
           }
           geoip {	source => "dest_ip"} 
		}
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	if [ilogtype] == "palo" {
			mutate {
            	add_field => { "_raw" => "%{message}" }
           	}
           	grok {
            	match => [ "message", "<%{POSINT}>%{CISCOTIMESTAMP:syslog_timestamp} %{DATA:syslog_hostname}%{GREEDYDATA}" ]
           }

           	mutate {
            	split => ["message", "|"]
            	add_field => { "deviceProduct" => "%{message[1]}" }
            	add_field => { "deviceVendor" => "%{message[2]}" }
            	add_field => { "deviceVersion" => "%{message[3]}" }
            	add_field => { "signatureId" => "%{message[4]}" }
            	add_field => { "eventName" => "%{message[5]}" }
            	add_field => { "severity" => "%{message[6]}" }
            	add_field => { "rawMessage" => "%{message[7]}" }
           	}
            mutate {
              	gsub => [ "rawMessage", "= ","=N/A ","rawMessage","ad.","x","rawMessage","[\\?#-]","" ]
           	}

           	kv {
            	source => "rawMessage"
            	field_split => " "
            	value_split => "="
                }
            mutate {
                remove_field => [ "rt" ]
                remove_field => [ "start" ]
                remove_field => [ "message" ]
                remove_field => [ "rawMessage" ]
            }
            date {
                 locale => "en"
                 match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
                 timezone => "Asia/Bangkok"
                 target => "@timestamp"
	    	}
	   		mutate {
                rename => ["proto", "protocol" ]
                rename => ["msg", "systemMessage" ]
                rename => ["in", "bytes_in" ]
                rename => ["out", "bytes_out" ]
                rename => ["cat", "categoryTechnique" ]
                rename => ["act", "action" ]
                rename => ["src", "src_ip" ]
                rename => ["spt", "src_port" ]
                rename => ["suser", "src_user" ]
                rename => ["dhost", "dest_hostname" ]
                rename => ["dst", "dest_ip" ]
                rename => ["dpt", "dest_port" ]
                rename => ["request", "urlPath" ]
                rename => ["duser", "dest_user" ]
                rename => ["at", "logType" ]
                rename => ["dvchost", "deviceHostName" ]
                rename => ["cs1", "%{cs1Label}" ]
                rename => ["cs2", "%{cs2Label}" ]
                rename => ["cs3", "%{cs3Label}" ]
                rename => ["cs4", "%{cs4Label}" ]
                rename => ["cs5", "%{cs5Label}" ]
                rename => ["cs6", "%{cs6Label}" ]
                rename => ["cn1", "%{cn1Label}" ]
                rename => ["cn2", "%{cn2Label}" ]
                rename => ["cn3", "%{cn3Label}" ]
                rename => ["cn4", "%{cn4Label}" ]
                rename => ["cn5", "%{cn5Label}" ]
                rename => ["cn6", "%{cn6Label}" ]
            	}
	    	mutate {
                convert => [ "bytes_in", "integer" ]
                convert => [ "bytes_out", "integer" ]
            }
	    	mutate {
            	add_field => { "_time" => "%{@timestamp}" }
           	}
            mutate {
                remove_field => [ "cs1Label" ]
                remove_field => [ "cs2Label" ]
                remove_field => [ "cs3Label" ]
                remove_field => [ "cs4Label" ]
                remove_field => [ "cs5Label" ]
                remove_field => [ "cs6Label" ]
                remove_field => [ "cn1Label" ]
                remove_field => [ "cn2Label" ]
                remove_field => [ "cn3Label" ]
                remove_field => [ "cn4Label" ]
                remove_field => [ "cn5Label" ]
                remove_field => [ "cn6Label" ]
                remove_field => [ "flexString1Label"]
                remove_field => [ "Elapsed"]
                remove_field => [ "flexString1"]
                remove_field => [ "cnt"]
                remove_field => [ "VirtualSystem"]
                remove_field => [ "flexNumber1"]
				remove_field => [ "%{cs3Label}"]
	 			remove_field => [ "flexNumber1Label"]
            }
            geoip {	source => "dest_ip"} 
		}
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	if [ilogtype] == "windows" {
			json {source => "message"}
			date {
      			match => ["[EventTime]", "YYYY-MM-dd HH:mm:ss"]
      			timezone => "Asia/Bangkok"
    		}
         	prune {
       			whitelist_names => ["@timestamp","^host$","^AccountName$","^AuthenticationPackageName$","^Category$","^Domain$","^EventID$","^EventReceivedTime$",
       "^EventType$","^File$","^Hostname$","^IpAddress$","^Message$","^ModifyingUser$","^NewProfile$","^OldProfile$","^ProcessName$",
       "^ReasonCode$","^Severity$","^SeverityValue$","^SourceName$","^SubjectDomainName$","^SubjectUserName$","^System$","^TargetDomainName$",
       "^TargetUserName$","^ObjectName$","^ObjectType$","^ilogtype$"]
     		}	
        	mutate {
        		rename => ["AccountName","user"]
        		rename => ["AuthenticationPackageName","authentication_package_name"]
        		rename => ["Category","event_category"]
         		rename => ["Domain","domain_name"]
         		rename => ["EventID","event_id"]
         		rename => ["EventReceivedTime","_time"]
         		rename => ["EventType","event_type"]
         		rename => ["File","file_path"]
         		rename => ["Hostname","hostname"]
         		rename => ["IpAddress","ip"]
         		rename => ["Message","_raw"]
         		rename => ["ModifyingUser","modifying_user"]
         		rename => ["NewProfile","new_profile"]
         		rename => ["OldProfile","old_profile"]
         		rename => ["Port","port"]
         		rename => ["PrivilegeList","privilege_list"]
         		rename => ["ProcessName","process_name"]
         		rename => ["ReasonCode","reason_code"]
         		rename => ["Severity","severity"]
         		rename => ["SeverityValue","severity_value"]
         		rename => ["SourceName","src_name"]
         		rename => ["SubjectDomainName","subject_domain_name"]
         		rename => ["SubjectUserName","subject_user"]
         		rename => ["System","system"]
         		rename => ["TargetDomainName","target_domain_name"]
         		rename => ["TargetUserName","target_user"]
        		rename => ["ObjectName","object_name"]
        		rename => ["ObjectType","object_type"]
       		}
        	mutate {
        		convert =>{"event_id" => "string" }
			}
		}
	if [ilogtype] == "watchguard" {
       		mutate {
            	add_field => { "_raw" => "%{message}" }
       }
        	grok {
            	match => {"_raw" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:cluster} %{DATA:device_name} %{DATA:log_type}:%{GREEDYDATA:event_message}"}
       		}

       		if [log_type] =~ "http-proxy\[\d{4}\]" {
                	grok {
           		match => {"event_message" =>  "msg_id=%{QS:msg_id} %{WORD:action} %{DATA:device_type} %{DATA:ZONE}(\s%{POSINT}\s|\s)%{WORD:protocol} %{DATA:src_ip} %{DATA:dest_ip} %{POSINT:src_port} %{POSINT:dest_port} %{GREEDYDATA:wg_message} \(%{GREEDYDATA:system_message}\)"}
                 	}
        	}	
        	else if [log_type] =~ "firewall" {
                	grok {
           		match => {"event_message" => "msg_id=%{QS:msg_id} %{WORD:action} %{NOTSPACE:ZONE} %{WORD:device_type}(\s%{POSINT}\s|\s)%{WORD:protocol}(\s\d\d \d\d\s|\s)%{DATA:src_ip} %{DATA:dest_ip} %{POSINT:src_port} %{POSINT:dest_port} %{GREEDYDATA:wg_message} \(%{GREEDYDATA:system_message}\)"}

           		match => {"event_message" => "msg_id=%{QS:msg_id} %{WORD:action} %{DATA:device_type} %{DATA:ZONE} %{POSINT} %{WORD:protocol} %{POSINT} %{POSINT} %{DATA:src_ip} %{DATA:dest_ip} %{GREEDYDATA:wg_message} \(%{GREEDYDATA:system_message}\)"}

           		match => {"event_message" => "msg_id=%{QS:msg_id} %{WORD:action} %{DATA:device_type} %{DATA:ZONE} %{WORD:protocol} %{DATA:src_ip} %{DATA:dest_ip} %{GREEDYDATA:wg_message} \(%{GREEDYDATA:system_message}\)"}

                	}	
        	}
        	else if [log_type] =~ "iked" {

                	grok {
           		match => {"event_message" => "%{GREEDYDATA:system_message}"}
                }
         }

           kv {
                 source => "wg_message"
                 field_split => " "
                 value_split => "="
                 #trimkey => "<>\[\],"
                 trim_value => "<>\[\],"
       		}
	 	mutate{
                 rename => ["rcvd_bytes", "bytes_in" ]
                 rename => ["sent_bytes", "bytes_out" ]
                 }

           mutate {
                 convert => [ "bytes_in", "integer" ]
                 convert => [ "bytes_out", "integer" ]
                 }
           date {
                 match => [ "syslog_timestamp",  "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
                                 timezone => "Asia/Bangkok"
                 target => "@timestamp"
        	}
           mutate {
                 remove_field => ["message"]
                remove_field => ["event_message"]
        	}
	}
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------
	if [ilogtype] == "mikrotik" {
		grok {
        match => [
                   "message","%{USERNAME:log_type},info forward: in:%{GREEDYDATA:src_interface} out:%{GREEDYDATA:dest_interface}, src-mac %{COMMONMAC:src_mac}, proto %{WORD:protocol}%{SPACE}%{NOTSPACE}%{SPACE}%{IPV4:src_ip}:%{INT:src_port}->%{IPV4:dest_ip}:%{INT:dest_port}",
                   "message", "in:%{NOTSPACE:src_interface} out:%{NOTSPACE:dest_interface}, proto %{WORD:protocol}%{SPACE}%{NOTSPACE}%{SPACE}%{IPV4:src_ip}:%{INT:src_port}->%{IPV4:dest_ip}:%{INT:dest_port}",
                   "message","%{USERNAME:log_type},info forward: in:%{GREEDYDATA:src_interface} out:%{GREEDYDATA:dest_interface}, src-mac %{COMMONMAC:src_mac}, proto %{WORD:protocol}%{SPACE}%{NOTSPACE}%{SPACE}%{IPV4:src_ip}:%{INT:src_port}->%{IPV4:dest_ip}:%{INT:dest_port}%{NOTSPACE}%{SPACE}%{WORD}%{SPACE}\(%{IPV4}:%{INT}->%{IPV4:src_ip_nat}:%{INT:src_port_nat}\)",
		   "message", "in:%{NOTSPACE:src_interface} out:%{NOTSPACE:dest_interface}, proto %{WORD:protocol}, %{IPV4:src_ip}:%{INT:src_port}->%{IPV4:dest_ip}:%{INT:dest_port}%{NOTSPACE}%{SPACE}%{WORD}%{SPACE}%{IPV4}:%{INT}->\(%{IPV4:dest_ip_nat}:%{INT:dest_port_nat}->%{IPV4}:%{INT}\)",
		   "message", "in:%{NOTSPACE:src_interface} out:%{NOTSPACE:dest_interface}, src-mac %{COMMONMAC:src_mac}, proto %{WORD:protocol}%{SPACE}%{NOTSPACE}%{SPACE}%{IPV4:src_ip}:%{INT:src_port}->%{IPV4:dest_ip}:%{INT:dest_port}%{NOTSPACE}%{SPACE}%{WORD}%{SPACE}\(%{IPV4}:%{INT}->%{IPV4:src_ip_nat}:%{INT:src_port_nat}\)",
		   "message", "in:%{GREEDYDATA:src_interface} out:%{GREEDYDATA:dest_interface}, src-mac %{COMMONMAC:src_mac}, proto %{WORD:protocol}%{SPACE}%{NOTSPACE}%{SPACE}%{IPV4:src_ip}:%{INT:src_port}->%{IPV4:dest_ip}:%{INT:dest_port}"
          ]
     }
		mutate {
    			rename => { "message" => "_raw" }
  		}	
	geoip {     source => "dest_ip"}
	}
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------
     if [ilogtype] == "forcepoint" {
	mutate {
            add_field => { "_raw" => "%{message}" }
            add_field => { "_time" => "%{@timestamp}" }
        }
        mutate {
            split => ["message", "|"]
            add_field => { "deviceProduct" => "%{message[1]}" }
            add_field => { "deviceVendor" => "%{message[2]}" }
            add_field => { "deviceVersion" => "%{message[3]}" }
            add_field => { "signatureId" => "%{message[4]}" }
            add_field => { "eventName" => "%{message[5]}" }
            add_field => { "severity" => "%{message[6]}" }
            add_field => { "rawMessage" => "%{message[7]}" }
           }
        kv {
            source => "rawMessage"
            field_split => " "
            value_split => "="
            #trimkey => "<>\[\], "
            #trim => "<>\[\],"
        }
        mutate {
                 remove_field => [ "rt" ]
                 remove_field => [ "message" ]
                 remove_field => [ "rawMessage" ]
                 rename => ["spt", "src_port" ]
                 rename => ["dst", "dest_ip" ]
                 rename => ["deviceExternalId", "device_name"]
                 rename => ["act", "action" ]
                 rename => ["deviceOutboundInterface", "device_outbound_interface"]
                 rename => ["deviceInboundInterface", "device_inbound_interface"]
                 rename => ["proto", "protocol" ]
                 rename => ["src", "src_ip" ]
                 rename => ["dpt", "dest_port" ]
                 rename => ["dvchost", "device_hostname" ]
                 rename => ["cs1", "%{cs1Label}" ]
                 rename => ["app", "app_grok"]
                 remove_field => [ "cs1Label" ]
                 remove_field => ["dvc"]
                 remove_field => [ "deviceFacility" ]
            }
        grok {
                match => {"app_grok" => "%{WORD:app}"}
		match => {"_raw" => ""}
        }
        mutate {
                remove_field => ["app_grok"]
        }
	geoip {     source => "dest_ip"}        
     }
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------
else {
		mutate {
                	add_field => { "_raw" => "%{message}" }
                	remove_field => ["message"]
       		}
	}	
}
output {
  stdout {codec => rubydebug}
#  elasticsearch {
#  	hosts => ["--{iporhost}--"]
#    	index => "%{[ilogtype]}-%{+YYYY.MM}"
#    	template => "/usr/share/logstash/pipeline/template/elasticsearch-ilog-template.json"
#    	template_name => "ilog"
#    }
}
